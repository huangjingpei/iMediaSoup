import os

Import('*')

_myName = 'libavs_httpd'
#modules = ['source']
#externLibrary = ['']
           
      
_env = env.Clone()
#_env.Append(CPPFLAGS = '''  -DPOSIX -Werror -Wno-ignored-qualifiers -Wno-sign-compare -Wno-missing-field-initializers ''') 
_env.Append(CPPPATH = ['#system/include','#include',
						'#libhttpd',
						'#libfoundation/include',
						'#libnet/include',
						'#libaux/include',
						'#libev/',
						'#libyami/interface',
						'#libckits/include'])

_env.Append(LIBPATH = 'lib')
_env['LIBS'] = ['c', 'rt', 'dl','avs_ev','m']

_source = _env.Glob('*.c') + _env.Glob('*.cpp')
        
objs = _source

target = _env.SharedLibrary(_myName + '.so', objs, _LIBFLAGS=' -Wl,-Bsymbolic')
objs.append(target)


all = target

Return('all')
